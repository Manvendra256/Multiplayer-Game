:root {
  --squareSide: 5; /* squareSide == 50/noOfRows */
  --gridColor: wheat;
  --squareBorder: burlywood;
  --squareColorBefore: wheat;
  --squareColorAfter: burlywood;
  --dominoColor: burlywood;
  --gameScreenBackground: #f6fbd8;
}

* {
  margin: 0;
  padding: 0;
  box-sizing: border-box;
  font-family: "Alegreya", serif;
  /* user-select was creating problems with the mouse down event therefore added these four properties */
  -webkit-user-select: none; /* Chrome all / Safari all */
  -moz-user-select: none; /* Firefox all */
  -ms-user-select: none; /* IE 10+ */
  user-select: none; /* Likely future */
}

input {
  text-align: center;
}
::-webkit-input-placeholder {
  /* Chrome/Opera/Safari */
  text-align: center;
}
::-moz-placeholder {
  /* Firefox 19+ */
  text-align: center;
}
:-ms-input-placeholder {
  /* IE 10+ */
  text-align: center;
}
:-moz-placeholder {
  /* Firefox 18- */
  text-align: center;
}

#homepage,
#waitScreen,
#reloadScreen,
#countdownScreen,
#gameScreen {
  position: absolute;
  height: 100vh;
  width: 100vw;
  align-items: center;
  justify-content: center;
}

#gameScreen {
  background-color: var(--gameScreenBackground, white);
}

.board {
  height: 50vmin;
  width: 50vmin;
  display: flex;
  background-color: var(--gridColor, grey);
  flex-wrap: wrap;
}

.square {
  height: calc(1vmin * var(--squareSide, 1));
  width: calc(1vmin * var(--squareSide, 1));
  border: 0.2vmin solid var(--squareBorder);
  background-color: var(--squareColorBefore, grey);
}

.curveLeft {
  border-top-left-radius: 50%;
  border-bottom-left-radius: 50%;
  background-color: var(--squareColorAfter, black);
}

.curveRight {
  border-top-right-radius: 50%;
  border-bottom-right-radius: 50%;
  background-color: var(--squareColorAfter, black);
}

.curveTop {
  border-top-left-radius: 50%;
  border-top-right-radius: 50%;
  background-color: var(--squareColorAfter, black);
}

.curveBottom {
  border-bottom-left-radius: 50%;
  border-bottom-right-radius: 50%;
  background-color: var(--squareColorAfter, black);
}

.dominoContainer {
  justify-content: center;
  align-items: center;
}

.dominoSquare {
  height: calc(1vmin * var(--squareSide, 1));
  width: calc(1vmin * var(--squareSide, 1));
}

.horizontalDomino {
  transform: translate(
    0,
    0
  ); /* hacky fix for removing the translucent box behind the domino while dragging*/
  background: var(--dominoColor, black);
  display: flex;
  height: calc(1vmin * var(--squareSide, 1));
  width: calc(1vmin * 2 * var(--squareSide, 1));
  border-radius: calc(1vmin * var(--squareSide, 1));
}

.verticalDomino {
  transform: translate(
    0,
    0
  ); /* hacky fix for removing the translucent box behind the domino while dragging*/
  background: var(--dominoColor, black);
  display: flex;
  flex-wrap: wrap;
  height: calc(1vmin * 2 * var(--squareSide, 1));
  width: calc(1vmin * var(--squareSide, 1));
  border-radius: calc(1vmin * var(--squareSide, 1));
}
